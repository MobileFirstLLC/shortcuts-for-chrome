{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Shortcuts for Chrome","text":"<p>Shortcuts for Chrome is a customizable browser navigation menu particularly for technical users. It contains links to all Chrome browser's internal pages called \"Chrome URLs\". Chrome URLs are normally hard to find, but this menu makes them easily accessible. Chrome URLs change over time with browser updates. The intent is to keep the Shortcuts for Chrome in sync with the latest version of Chrome. The menu also allows to pin and sort favorite URLs to fit individual preferences.</p> <p>This website contains the documentation for Shortcuts for Chrome. It explains, for example, how to get started with its development. You can also contribute to the software translations.</p> <p>We thank all source code contributors  and translation contributors for their efforts in improving this free and open-source software. </p> <p></p> <p></p>"},{"location":"api/","title":"Source Code Docs","text":""},{"location":"api/#classes","title":"Classes","text":"ContextMenu <p>The ContextMenu class adds custom options to the browser action's context menu (the \"right-click\" menu). The context menu setup must be run in the extension's background context.</p> Background <p>The background class sets up all functionality and event handlers in the extension's background context. Currently, this module sets up the extension context menu. Instantiate <code>Background</code> to activate this functionality. The instantiation must be run in the extension's background context.</p> Dragging <p>Makes child-nodes of some DOM Element draggable, using native HTML drag and drop. This class has no dependencies and can be applied to any collection of UI elements to make them draggable.</p> Menu <p>Menu panel is a DOM elements that shows a list of links. This class is responsible for creating and managing the menu.</p> Popup <p>This is the main class of the popup window, displayed when user clicks the extension icon. The <code>Popup</code> class is responsible for saving/restoring persistent data and rendering the menu panel. This popup view can easily be extended to display other content, but currently it renders the menu panel only.</p> RecentLinks <p>Recent links is a list of URL that were used \"recently\", based on configurable interval in Config.recentIntervalMillis. Unpinned recent links are displayed at the top of the menu. Recent links become stale after some time and are removed from the recent list.</p> Storage <p>Application storage for persisting data. Persisted data includes: pinned links (user preference) and recently used links (based on user behavior). This storage is stored in chrome sync storage, which is specific to current user, and will sync between devices if user is signed in and sync is enabled.</p> <p></p>"},{"location":"api/#contextmenu","title":"ContextMenu","text":"<p>The ContextMenu class adds custom options to the browser action's context menu (the \"right-click\" menu). The context menu setup must be run in the extension's background context.</p> <p>Kind: global class See:  chrome.contextMenus</p> <p>Required Permissions</p> <p>This feature requires <code>contextMenus</code> permission in extension manifest.  </p> <p></p>"},{"location":"api/#contextmenuinitialize","title":"ContextMenu.initialize()","text":"<p>This method creates a context menu based on a configuration defined in <code>Config.ContextMenuOptions</code>.</p> <p>Initializes a context menu</p> <pre><code>import ContextMenu from 'contextMenu.js';\n\nContextMenu.initialize();\n</code></pre> <p>Kind: static method of <code>ContextMenu</code> </p>"},{"location":"api/#background","title":"Background","text":"<p>The background class sets up all functionality and event handlers in the extension's background context. Currently, this module sets up the extension context menu. Instantiate <code>Background</code> to activate this functionality. The instantiation must be run in the extension's background context.</p> <p>Kind: global class </p>"},{"location":"api/#new-background","title":"new Background()","text":"<p>Initializes all background scripts.</p> <p>Initialize background scripts</p> <pre><code>new Background();\n</code></pre> <p></p>"},{"location":"api/#dragging","title":"Dragging","text":"<p>Makes child-nodes of some DOM Element draggable, using native HTML drag and drop. This class has no dependencies and can be applied to any collection of UI elements to make them draggable.</p> <p>Kind: global class </p>"},{"location":"api/#new-draggingidattribute-container-onelementrender-ondragendcallback","title":"new Dragging(idAttribute, container, onElementRender, onDragEndCallback)","text":"<p>Initializing a new <code>Draggable</code> specifies the parent of the draggable content: its immediate children become draggable; the id-attribute that uniquely identifies the children; and handlers that are called each time after the draggable content is rendered, and when element order changes due to dragging.</p> <p>Create a new draggable</p> <pre><code>new Draggable(\n    // id attribute of child elements\n    \"data-drag-id\",\n    // parent container\n    document.getElementById(\"drag-container\"),\n    // function to call after rendering elements\n    onDragRenderCallback,\n    // callback to handle drag action\n    onOrderChangeCallback)\n</code></pre> Param Type Description idAttribute <code>string</code> For each draggable element, this attribute will provide its id, for example <code>id</code> when element is expected to have such attribute e.g. <code>&lt;span id='label-1'&gt;example&lt;/span&gt;</code>. container <code>Element</code> The first parent of all draggable elements -&gt; provide a DOM element reference. Typically, a <code>&lt;div&gt;</code> or similar block-level element. onElementRender <code>function</code> After drag events have been attached, other remaining action handlers still need to be attached. This callback function will allow initiator to bind additional events to draggable elements. onDragEndCallback <code>function</code> After drag is done, this callback function notifies initiator that the item order within the draggable area has changed. <p></p>"},{"location":"api/#menu","title":"Menu","text":"<p>Menu panel is a DOM elements that shows a list of links. This class is responsible for creating and managing the menu.</p> <p>Kind: global class  </p> <ul> <li>Menu<ul> <li>new Menu(getLinks, onPinToggle, onPinOrderChange, getRecent)</li> <li>.name \u21d2 <code>string</code></li> <li>.idAttr \u21d2 <code>string</code></li> <li>.render() \u21d2 <code>Element</code></li> </ul> </li> </ul> <p></p>"},{"location":"api/#new-menugetlinks-onpintoggle-onpinorderchange-getrecent","title":"new Menu(getLinks, onPinToggle, onPinOrderChange, getRecent)","text":"<p>Create a menu of navigation links. This menu panel is drawn dynamically by creating all menu elements programmatically on <code>render()</code>. The parent instantiating the menu will call render. Parent must then add the returned menu to DOM tree to display it to user.</p> <p>Creating and rendering a menu of links</p> <pre><code>import Menu from './menu';\n\n// construct a menu\nconst menu = new Menu(getLinks, onPinToggle, onPinOrderChange, getRecent);\n\n// render the menu by appending it in document body\nbody.append(menu.render());\n</code></pre> <p>Returns: <code>Object</code> - Menu panel reference.  </p> Param Type Description getLinks <code>function</code> Function that returns all links. onPinToggle <code>function</code> Callback function for when link is pinned/unpinned. onPinOrderChange <code>function</code> Callback function for when links are re-ordered. getRecent <code>function</code> Function that returns list of recent links. <p></p>"},{"location":"api/#menuname-string","title":"Menu.name \u21d2 <code>string</code>","text":"<p>Name of this menu view.</p> <p>Kind: static property of <code>Menu</code> </p>"},{"location":"api/#menuidattr-string","title":"Menu.idAttr \u21d2 <code>string</code>","text":"<p>DOM attribute for getting the unique id of a link.</p> <p>Kind: static property of <code>Menu</code> </p>"},{"location":"api/#menurender-element","title":"Menu.render() \u21d2 <code>Element</code>","text":"<p>Programmatically draws the menu panel and its links.</p> <p>Kind: static method of <code>Menu</code> Returns: <code>Element</code> - DOM element representing the menu. </p>"},{"location":"api/#popup","title":"Popup","text":"<p>This is the main class of the popup window, displayed when user clicks the extension icon. The <code>Popup</code> class is responsible for saving/restoring persistent data and rendering the menu panel. This popup view can easily be extended to display other content, but currently it renders the menu panel only.</p> <p>Kind: global class </p>"},{"location":"api/#new-popup","title":"new Popup()","text":"<p>Instantiating a popup defaults to rendering a <code>Menu</code>.</p> <p>Create a popup</p> <pre><code>new Popup();\n</code></pre> <p></p>"},{"location":"api/#recentlinks","title":"RecentLinks","text":"<p>Recent links is a list of URL that were used \"recently\", based on configurable interval in Config.recentIntervalMillis. Unpinned recent links are displayed at the top of the menu. Recent links become stale after some time and are removed from the recent list.</p> <p>Kind: global class  </p> <ul> <li>RecentLinks<ul> <li>.isStillRecent(timestamp) \u21d2 <code>boolean</code></li> <li>.addRecent(url, callback)</li> <li>.getRecent(callback)</li> </ul> </li> </ul> <p></p>"},{"location":"api/#recentlinksisstillrecenttimestamp-boolean","title":"RecentLinks.isStillRecent(timestamp) \u21d2 <code>boolean</code>","text":"<p>Determine if some timestamp still qualifies as recent.</p> <p>Check if access is recent</p> <pre><code>const timestamp = Date.now(); // capture timestamp\n\n// ... a few minutes later:\nconsole.log(RecentLinks.isStillRecent(timestamp));\n</code></pre> <p>Kind: static method of <code>RecentLinks</code> Returns: <code>boolean</code> - True if link is still valid relative to current time.  </p> Param Type Description timestamp <code>number</code> Milliseconds since epoch when link was last accessed. <p></p>"},{"location":"api/#recentlinksaddrecenturl-callback","title":"RecentLinks.addRecent(url, callback)","text":"<p>Mark some URL as recently used. This will either add or update the link, depending on if it already exists as a recently used link.</p> <p>Kind: static method of <code>RecentLinks</code> </p> Param Type Description url <code>string</code> Link URL. callback <code>function</code> Handler for when function is done. <p></p>"},{"location":"api/#recentlinksgetrecentcallback","title":"RecentLinks.getRecent(callback)","text":"<p>Get all recent items. This method returns everything that qualifies as recent. It doesn't check if a link is pinned or not, and that should be done at display time to avoid duplication.</p> <p>Kind: static method of <code>RecentLinks</code> </p> Param Type Description callback <code>function</code> Result handler <p></p>"},{"location":"api/#storage","title":"Storage","text":"<p>Application storage for persisting data. Persisted data includes: pinned links (user preference) and recently used links (based on user behavior). This storage is stored in chrome sync storage, which is specific to current user, and will sync between devices if user is signed in and sync is enabled.</p> <p>Kind: global class See:  Chrome storage</p> <p>Required Permissions</p> <p>This feature requires <code>storage</code> permission in extension manifest.  </p> <ul> <li>Storage<ul> <li>.keys \u21d2 <code>Object</code></li> <li>.get(keys, callback)</li> <li>.save(key, value, callback)</li> </ul> </li> </ul> <p></p>"},{"location":"api/#storagekeys-object","title":"Storage.keys \u21d2 <code>Object</code>","text":"<p>List of storage keys. Only these keys can be stored in this storage.</p> <p>Kind: static enum of <code>Storage</code> </p>"},{"location":"api/#storagegetkeys-callback","title":"Storage.get(keys, callback)","text":"<p>Get values from storage</p> <pre><code>Storage.get([Storage.keys.recent], items =&gt; {\n  // do something with items\n});\n</code></pre> <p>Kind: static method of <code>Storage</code> </p> Param Type Description keys <code>string</code> | <code>Array.&lt;string&gt;</code> | <code>Object</code> Must be one of: A single key to get, list of keys to get, or a dictionary specifying default values (see description of the object). An empty list or object will return an empty result object. Pass in null to get the entire contents of storage. callback <code>function</code> Function to call with result. <p></p>"},{"location":"api/#storagesavekey-value-callback","title":"Storage.save(key, value, callback)","text":"<p>Save value to storage</p> <pre><code>Storage.save(Storage.keys.recent, recentObj, callback);\n</code></pre> <p>Kind: static method of <code>Storage</code> </p> Param Type Description key <code>string</code> One of  keys. value <code>*</code> Value to save. callback <code>function</code> Called after save operation has completed. <p></p>"},{"location":"api/#config-object","title":".Config : <code>Object</code>","text":"<p>Application configurations.</p> <p>Kind: static constant Read only: true  </p> <ul> <li>.Config : <code>Object</code><ul> <li>.SVGIcons : <code>enum</code></li> <li>.ContextMenuOptions : <code>enum</code></li> <li>.recentIntervalMillis : <code>number</code></li> </ul> </li> </ul> <p></p>"},{"location":"api/#configsvgicons-enum","title":"Config.SVGIcons : <code>enum</code>","text":"<p>App icons svg paths.</p> <p>Kind: static enum of <code>Config</code> </p>"},{"location":"api/#configcontextmenuoptions-enum","title":"Config.ContextMenuOptions : <code>enum</code>","text":"<p>List of options to display in the context menu. Links will open in new tab when width/height (ww/wh) are not specified. Otherwise, links will open in a window of specified size.</p> <p>Kind: static enum of <code>Config</code> </p>"},{"location":"api/#configrecentintervalmillis-number","title":"Config.recentIntervalMillis : <code>number</code>","text":"<p>When a link clicked within last X milliseconds, it is considered \"recently used\".</p> <p>Kind: static constant of <code>Config</code> </p>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file. See standard-version for commit guidelines.</p>"},{"location":"changelog/#370-2023-11-19","title":"3.7.0 (2023-11-19)","text":"<ul> <li>Remove share options from context menu in 96</li> <li>Update the chrome urls list in 99</li> <li>Update translations in 101</li> <li>Update docs and test in 104</li> <li>Update dev dependencies</li> </ul>"},{"location":"changelog/#360-2021-11-21","title":"3.6.0 (2021-11-21)","text":"<ul> <li>Update Japanese translation in 33</li> <li>Open links in the foreground in 36</li> <li>Migrate to mv3 in 37</li> <li>Update recent links in foreground in 38</li> <li>Update dev dependencies in 30, 32</li> </ul>"},{"location":"changelog/#351-2021-10-08","title":"3.5.1 (2021-10-08)","text":"<ul> <li>i18n in 24</li> <li>update manifest in 25</li> <li>update context menu in 28</li> </ul>"},{"location":"changelog/#350-2021-08-21","title":"3.5.0 (2021-08-21)","text":"<ul> <li>added translations for all Chrome locales changeset</li> </ul>"},{"location":"changelog/#341-2021-08-08","title":"3.4.1 (2021-08-08)","text":"<ul> <li>added translations for 8 more languages (ca, cs, de, el, es, it, ru, sv)</li> </ul>"},{"location":"changelog/#340-2021-07-19","title":"3.4.0 (2021-07-19)","text":"<ul> <li>migrate to manifest v3 PR #12</li> <li>change font size to better match native chrome size PR #11</li> <li>pinned icon alignment is off PR #10</li> <li>update icon PR #9</li> </ul>"},{"location":"changelog/#330-2021-02-24","title":"3.3.0 (2021-02-24)","text":"<ul> <li>add recent links</li> </ul>"},{"location":"changelog/#322-2021-01-09","title":"3.2.2 (2021-01-09)","text":"<ul> <li>add more share options (3ccbc63)</li> <li>add v3 manifest (e48df73)</li> <li>locales (55a97b6)</li> <li>adjust dark color scheme (183d6aa)</li> </ul>"},{"location":"changelog/#320-2020-12-15","title":"3.2.0 (2020-12-15)","text":"<ul> <li>Add translations</li> <li>Add dark mode support</li> </ul>"},{"location":"changelog/#311-2020-12-06","title":"3.1.1 (2020-12-06)","text":""},{"location":"changelog/#310-2020-12-06","title":"3.1.0 (2020-12-06)","text":"<ul> <li>migrate storage to use chrome sync storage over local (b898df7)</li> <li>lint (57fcef6)</li> <li>link: fix typo (eea986b)</li> <li>test: change unit test to sync storage (41fcfed)</li> <li>add pinned item min width; update storage module (39dc352)</li> </ul>"},{"location":"changelog/#301-2020-10-15","title":"3.0.1 (2020-10-15)","text":"<ul> <li>update menu links (5796bb3)</li> </ul>"},{"location":"changelog/#300-2020-10-11","title":"3.0.0 (2020-10-11)","text":"<ul> <li>change name</li> <li>update context menu links (d873e8a)</li> </ul>"},{"location":"privacy/","title":"Privacy Policy","text":"<p>This is a privacy policy about a software applications developed by Mobile First LLC (the \"developer\").  This policy applies to Shortcuts for Chrome (the \"app\") and to people installing and using the application (the \"user\").</p>"},{"location":"privacy/#user-accounts","title":"User Accounts","text":"<p>Application does not require users to create login credentials. Users are not required to provide any personal information. When the app persists data, such as user preferences, that data is stored by Chrome browser either locally or in the browser's sync storage. The developer does not have access and cannot recover any data about the user. Once app is deleted, all application data is deleted.</p>"},{"location":"privacy/#use-of-third-party-libraries","title":"Use of Third Party Libraries","text":"<p>The app may use third party libraries for purposes of implementing specific features needed by the app to function as intended.  This privacy policy does not cover third party libraries. Currently, third party libraries are only used during application development.  No third party code is included in the distributed version of the app. The application does not contain any ads, tracking, or analytics packages.</p>"},{"location":"privacy/#acknowledgement","title":"Acknowledgement","text":"<p>By using the app the user accepts this policy.</p> <p>Last modified: November 19, 2023. </p> <p>Changelog </p>"},{"location":"start/","title":"Getting Started","text":"<p>Building this application from source requires  Node.js and  git.</p>"},{"location":"start/#building-from-source","title":"Building from source","text":"<p> First clone project and install dependencies.</p> Setup<pre><code>git clone https://github.com/MobileFirstLLC/shortcuts-for-chrome.git\ncd shortcuts-for-chrome &amp;&amp; npm install\n</code></pre> <p> Build a locally debuggable version.</p> Build extension<pre><code>npm run build\n</code></pre> <p> Get a list of other available development commands.</p> Help<pre><code>npm run\n</code></pre> <p>This extension is build with extension-cli. Refer to user guide for further details of building the extension.</p>"},{"location":"start/#debugging","title":"Debugging","text":"<p>Howto debug a Chrome extension:</p> <ol> <li>Go to \"Extensions\" in the Shortcuts for Chrome menu.    Alternatively, navigate to address <code>chrome://extensions</code>.</li> <li>Enable developer mode.</li> <li>Click <code>load unpacked</code>.</li> <li>Navigate to the extension source and choose <code>dist</code> directory.</li> </ol>"},{"location":"start/#code-organization","title":"Code organization","text":"Directories &amp; Files<pre><code>.\n\u251c\u2500 .github/               # Repository configuration\n\u2502  \u251c\u2500 workflows/          # Automated workflows\n\u2502  \u2514\u2500 README.md           # GitHub readme\n\u251c\u2500 assets/                # Extension images and features images \n\u2502  \u251c\u2500 img/                # Extension icons \n\u2502  \u2514\u2500 *                   # Webstore assets\n\u251c\u2500 docs/                  # Source code documentation (this website)\n\u251c\u2500 i18n/                  # Generated translations (edit on POEditor)  \n\u251c\u2500 src/                   # Source code                           \n\u2502  \u251c\u2500 background/         # Background scripts                    \n\u2502  \u251c\u2500 menu/               # Links menu                         \n\u2502  \u251c\u2500 popup/              # Extension popup view                  \n\u2502  \u251c\u2500 shared/             # Shared classes and modules            \n\u2502  \u2514\u2500 manifest.json       # Extension manifest                    \n\u251c\u2500 test/                  # Unit tests        \n\u251c\u2500 utilities/             # Utility scripts                         \n\u2502  \u251c\u2500 locales.js          # Formats locales files\n\u2502  \u2514\u2500 translate.js        # Automatic translations                     \n\u251c\u2500 LICENSE                # Software license\n\u2514\u2500 package.json           # Configuration and dependencies \n</code></pre>"},{"location":"start/#system-description","title":"System description","text":"<p>The extension has a popup window that is visible to a user. This is the primary way of interacting with the extension. A service worker, for managing extension background services, runs in the background context.</p> <p>When a user clicks extension icon (the \"browser action\") extension opens the popup window. The menu contains various navigation links and clicking a link opens a new browser tab. User can pin and unpin menu links, and sort the pinned links by dragging and dropping. This behavior is implemented by three modules.</p> <p> <code>src/popup</code> manages the extension popup window.</p> <ul> <li>It saves and restores user preferences.</li> <li>It sets the visible content rendering inside the popup window.</li> <li>Menu is currently the only possible view, so the popup always renders the menu.</li> </ul> <p> <code>src/menu</code> panel shows list of links.</p> <ul> <li>User can pin/unpin links and drag and drop pinned links.</li> <li>It programmatically handles link click actions.</li> <li>It captures recently used links.</li> </ul> <p> <code>src/background</code> has no interface; it runs in the background context of the browser.</p> <ul> <li>It creates and manages extension context menu.</li> </ul> <p>For a more detailed technical description of these modules see the Source Code Documentation.</p>"},{"location":"start/#dependencies","title":"Dependencies","text":"<p>The application release version contains no external dependencies.</p>"},{"location":"start/#development-dependencies","title":"Development dependencies","text":"Task NPM Package Purpose Translation @google-cloud/translate Translation API dotenv ENV variables moment File modification time Docs jsdoc-to-markdown Building docs nodemon Monitor js-file changes Build extension-cli Building extension webpack Web module bundling Publishing cws-publish Publishing at Chrome Web Store"},{"location":"translate/","title":"Translate","text":"<p>Shortcuts for Chrome is internationalized to support multiple languages and locales of its users. The application presents in the same language as the user's browser. The initial translations are machine-generated and they may not be great.</p> <p>*You* can improve the quality of Shortcuts for Chrome by reviewing and editing the translations. No coding experience is necessary, but you should be fluent in at least one other language besides English.  Follow the instructions at POEditor to get started.  The translations are updated with each release. </p> <p>Translate on POEditor \u2197</p>"},{"location":"translate/#contributors","title":"Contributors","text":"<p>We thank all translation contributors for improving this free open-source extension! </p>"},{"location":"translate/#supported-languages","title":"Supported Languages","text":"\ud83c\uddea\ud83c\uddf9 Amharic\ud83c\uddf8\ud83c\udde6 Arabic\ud83c\udde7\ud83c\udde9 Bengali\ud83c\udde7\ud83c\uddec Bulgarian\ud83c\udde6\ud83c\udde9 Catalan \ud83c\udde8\ud83c\uddf3 Chinese\ud83c\uddf9\ud83c\uddfc Chinese\ud83c\udded\ud83c\uddf7 Croatian\ud83c\udde8\ud83c\uddff Czech\ud83c\udde9\ud83c\uddf0 Danish \ud83c\uddf3\ud83c\uddf1 Dutch\ud83c\uddec\ud83c\udde7 English\ud83c\uddfa\ud83c\uddf8 English\ud83c\uddea\ud83c\uddea Estonian\ud83c\uddf5\ud83c\udded Filipino \ud83c\uddeb\ud83c\uddee Finnish\ud83c\uddeb\ud83c\uddf7 French\ud83c\udde9\ud83c\uddea German\ud83c\uddec\ud83c\uddf7 Greek\ud83c\uddee\ud83c\uddf3 Gujarati \ud83c\uddee\ud83c\uddf1 Hebrew\ud83c\uddee\ud83c\uddf3 Hindi\ud83c\udded\ud83c\uddfa Hungarian\ud83c\uddee\ud83c\udde9 Indonesian\ud83c\uddee\ud83c\uddf9 Italian \ud83c\uddef\ud83c\uddf5 Japanese\ud83c\uddee\ud83c\uddf3 Kannada\ud83c\uddf0\ud83c\uddf7 Korean\ud83c\uddf1\ud83c\uddfb Latvian\ud83c\uddf1\ud83c\uddf9 Lithuanian \ud83c\uddee\ud83c\udde9 Malay\ud83c\uddee\ud83c\uddf3 Malayalam\ud83c\uddee\ud83c\uddf3 Marathi\ud83c\uddf3\ud83c\uddf4 Norwegian\ud83c\uddee\ud83c\uddf7 Persian \ud83c\uddf5\ud83c\uddf1 Polish\ud83c\uddf5\ud83c\uddf9 Portuguese\ud83c\udde7\ud83c\uddf7 Portuguese\ud83c\uddf7\ud83c\uddf4 Romanian\ud83c\uddf7\ud83c\uddfa Russian \ud83c\uddf7\ud83c\uddf8 Serbian\ud83c\uddf8\ud83c\uddf0 Slovak\ud83c\uddf8\ud83c\uddee Slovenian\ud83c\uddea\ud83c\uddf8 Spanish\ud83c\uddf2\ud83c\uddfd Spanish \ud83c\uddf0\ud83c\uddea Swahili\ud83c\uddf8\ud83c\uddea Swedish\ud83c\uddee\ud83c\uddf3 Tamil\ud83c\uddee\ud83c\uddf3 Telugu\ud83c\uddf9\ud83c\udded Thai \ud83c\uddf9\ud83c\uddf7 Turkish\ud83c\uddfa\ud83c\udde6 Ukrainian\ud83c\uddfb\ud83c\uddf3 Vietnamese"}]}